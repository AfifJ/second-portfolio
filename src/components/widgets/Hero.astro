---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  actions?: string | CallToAction[];
  image?: string | any; // TODO: find HTMLElementProps
}

const socialLinks = [
  { ariaLabel: 'X', icon: 'tabler:brand-x', href: '#' },
  { ariaLabel: 'Instagram', icon: 'tabler:brand-instagram', href: '#' },
  { ariaLabel: 'Facebook', icon: 'tabler:brand-facebook', href: '#' },
  { ariaLabel: 'Github', icon: 'tabler:brand-github', href: 'https://github.com/onwidget/astrowind' },
];

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose 2xl:mb-0" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="md:py-0 2xl:py-16">
      <div class="text-center max-w-5xl mx-auto">
        {
          title && (
            <h1
              class="text-5xl md:text-6xl font-bold leading-tighter tracking-tigh mb-4 font-heading dark:text-gray-200"
              set:html={title}
            />
          )
        }

        
        <div class="max-w-3xl mx-auto">
          {subtitle && <p class="text-lg text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
          {
            tagline && (
              <p class="text-base text-secondary dark:text-blue-200 font-bold tracking-wide" set:html={tagline} />
            )
          }
          {
            socialLinks?.length ? (
              <ul class="flex mb-4 md:order-1 justify-center">
                {socialLinks.map(({ ariaLabel, href, icon }) => (
                  <li>
                    <a
                      class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none rounded-lg text-sm p-2.5 inline-flex items-center"
                      aria-label={ariaLabel}
                      href={href}
                    >
                      {icon && <Icon name={icon} class="w-5 h-5" />}
                    </a>
                  </li>
                ))}
              </ul>
            ) : (
              ''
            )
          }
         
          {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" icon="tabler:click" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div>
        {
          image && (
            <div class="relative m-auto max-w-5xl">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="mx-auto rounded-md w-full"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  loading="eager"
                  width={1024}
                  height={576}
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>
